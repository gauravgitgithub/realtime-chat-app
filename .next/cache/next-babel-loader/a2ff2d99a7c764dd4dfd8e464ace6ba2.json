{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* components/Chat.js */\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport ChatMessage from './ChatMessage';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar Chat = /*#__PURE__*/function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var user = _this.props.activeUser;\n        var chat = {\n          user: user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('chat-room');\n      this.channel.bind('new-message', function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/messages').then(function (response) {\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return this.props.activeUser && __jsx(Fragment, null, __jsx(\"div\", {\n        className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n        style: {\n          height: 90\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-dark mb-0 mx-4 px-2\"\n      }, this.props.activeUser)), __jsx(\"div\", {\n        className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n        style: {\n          height: 'calc(100% - 180px)',\n          overflowY: 'scroll'\n        }\n      }, this.state.chats.map(function (chat, index) {\n        var previous = Math.max(0, index - 1);\n        var previousChat = _this3.state.chats[previous];\n        var position = chat.user === _this3.props.activeUser ? \"right\" : \"left\";\n        var isFirst = previous === index;\n        var inSequence = chat.user === previousChat.user;\n        var hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n        var mood = chat.sentiment > 0 ? HAPPY_EMOJI : chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n        return __jsx(Fragment, {\n          key: index\n        }, (isFirst || !inSequence || hasDelay) && __jsx(\"div\", {\n          className: \"d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-\".concat(position),\n          style: {\n            fontSize: '0.9rem'\n          }\n        }, __jsx(\"span\", {\n          className: \"d-block\",\n          style: {\n            fontSize: '1.6rem'\n          }\n        }, String.fromCodePoint.apply(String, _toConsumableArray(mood))), __jsx(\"span\", null, chat.user || 'Anonymous')), __jsx(ChatMessage, {\n          message: chat.message,\n          position: position\n        }));\n      })), __jsx(\"div\", {\n        className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n        style: {\n          minHeight: 90\n        }\n      }, __jsx(\"textarea\", {\n        className: \"form-control px-3 py-2\",\n        onKeyUp: this.handleKeyUp,\n        placeholder: \"Enter a chat message\",\n        style: {\n          resize: 'none'\n        }\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/realtime-chat-app/components/Chat.js"],"names":["React","Component","Fragment","axios","Pusher","ChatMessage","SAD_EMOJI","HAPPY_EMOJI","NEUTRAL_EMOJI","Chat","chats","evt","value","target","keyCode","shiftKey","user","props","activeUser","chat","message","timestamp","Date","post","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","state","push","setState","connection","then","response","data","messages","disconnect","height","overflowY","map","index","previous","Math","max","previousChat","position","isFirst","inSequence","hasDelay","ceil","mood","sentiment","fontSize","String","fromCodePoint","minHeight","handleKeyUp","resize"],"mappings":"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","sourcesContent":["    /* components/Chat.js */\n\n    import React, { Component, Fragment } from 'react';\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n    import ChatMessage from './ChatMessage';\n\n    const SAD_EMOJI = [55357, 56864];\n    const HAPPY_EMOJI = [55357, 56832];\n    const NEUTRAL_EMOJI = [55357, 56848];\n\n    class Chat extends Component {\n\n      state = { chats: [] }\n\n      componentDidMount() {\n\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n          cluster: process.env.PUSHER_APP_CLUSTER,\n          encrypted: true\n        });\n\n        this.channel = this.pusher.subscribe('chat-room');\n\n        this.channel.bind('new-message', ({ chat = null }) => {\n          const { chats } = this.state;\n          chat && chats.push(chat);\n          this.setState({ chats });\n        });\n\n        this.pusher.connection.bind('connected', () => {\n          axios.post('/messages')\n            .then(response => {\n              const chats = response.data.messages;\n              this.setState({ chats });\n            });\n        });\n\n      }\n\n      componentWillUnmount() {\n        this.pusher.disconnect();\n      }\n\n      handleKeyUp = evt => {\n        const value = evt.target.value;\n\n        if (evt.keyCode === 13 && !evt.shiftKey) {\n          const { activeUser: user } = this.props;\n          const chat = { user, message: value, timestamp: +new Date };\n\n          evt.target.value = '';\n          axios.post('/message', chat);\n        }\n      }\n\n      render() {\n        return (this.props.activeUser && <Fragment>\n\n          <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\n            <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\n          </div>\n\n          <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 180px)', overflowY: 'scroll' }}>\n\n            {this.state.chats.map((chat, index) => {\n\n              const previous = Math.max(0, index - 1);\n              const previousChat = this.state.chats[previous];\n              const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\n\n              const isFirst = previous === index;\n              const inSequence = chat.user === previousChat.user;\n              const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n\n              const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\n\n              return (\n                <Fragment key={index}>\n\n                  { (isFirst || !inSequence || hasDelay) && (\n                    <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '0.9rem' }}>\n                      <span className=\"d-block\" style={{ fontSize: '1.6rem' }}>\n                        {String.fromCodePoint(...mood)}\n                      </span>\n                      <span>{chat.user || 'Anonymous'}</span>\n                    </div>\n                  ) }\n\n                  <ChatMessage message={chat.message} position={position} />\n\n                </Fragment>\n              );\n\n            })}\n        </div>\n\n          <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\n            <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\n          </div>\n\n        </Fragment> )\n      }\n\n    }\n\n    export default Chat;"]},"metadata":{},"sourceType":"module"}