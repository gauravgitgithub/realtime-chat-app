{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport ChatMessage from './ChatMessage';\nvar SAD_EMOJI = [55357, 56864];\nvar HAPPY_EMOJI = [55357, 56832];\nvar NEUTRAL_EMOJI = [55357, 56848];\n\nvar Chat = /*#__PURE__*/function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      chats: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (evt) {\n      var value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        var user = _this.props.activeUser;\n        var chat = {\n          user: user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe('chat-room');\n      this.channel.bind('new-message', function (_ref) {\n        var _ref$chat = _ref.chat,\n            chat = _ref$chat === void 0 ? null : _ref$chat;\n        var chats = _this2.state.chats;\n        chat && chats.push(chat);\n\n        _this2.setState({\n          chats: chats\n        });\n      });\n      this.pusher.connection.bind('connected', function () {\n        axios.post('/messages').then(function (response) {\n          var chats = response.data.messages;\n\n          _this2.setState({\n            chats: chats\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.pusher.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return this.props.activeUser && __jsx(Fragment, null, __jsx(\"div\", {\n        className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n        style: {\n          height: 90\n        }\n      }, __jsx(\"h2\", {\n        className: \"text-dark mb-0 mx-4 px-2\"\n      }, this.props.activeUser)), __jsx(\"div\", {\n        className: \"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\",\n        style: {\n          height: 'calc(100% - 180px)',\n          overflowY: 'scroll'\n        }\n      }, this.state.chats.map(function (chat, index) {\n        var previous = Math.max(0, index - 1);\n        var previousChat = _this3.state.chats[previous];\n        var position = chat.user === _this3.props.activeUser ? \"right\" : \"left\";\n        var isFirst = previous === index;\n        var inSequence = chat.user === previousChat.user;\n        var hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n        var mood = chat.sentiment > 0 ? HAPPY_EMOJI : chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI;\n        return __jsx(Fragment, {\n          key: index\n        }, (isFirst || !inSequence || hasDelay) && __jsx(\"div\", {\n          className: \"d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-\".concat(position),\n          style: {\n            fontSize: '0.9rem'\n          }\n        }, __jsx(\"span\", {\n          className: \"d-block\",\n          style: {\n            fontSize: '1.6rem'\n          }\n        }, String.fromCodePoint.apply(String, _toConsumableArray(mood))), __jsx(\"span\", null, chat.user || 'Anonymous')), __jsx(ChatMessage, {\n          message: chat.message,\n          position: position\n        }));\n      })), __jsx(\"div\", {\n        className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n        style: {\n          minHeight: 90\n        }\n      }, __jsx(\"textarea\", {\n        className: \"form-control px-3 py-2\",\n        onKeyUp: this.handleKeyUp,\n        placeholder: \"Enter a chat message\",\n        style: {\n          resize: 'none'\n        }\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\n;\nexport default Chat;","map":null,"metadata":{},"sourceType":"module"}